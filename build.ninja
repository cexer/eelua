# Ninja build file

### Var define

rootdir = .
builddir = build

cxx = g++
cc = gcc
res = windres
ar = ar
lua = luajit

cflags = -O2 -s -Wall -Wextra -Wno-deprecated -Wno-unused-parameter $
  -DNDEBUG -Iinclude -Ideps/auxiliar
cxxflags = $cflags
ldflags = -Llib -L$builddir

### Rule define

rule cc
  command = $cc -MMD -MT $out -MF $out.d $cflags $cflags_ -c $in -o $out
  description = CC $out
  depfile = $out.d
  deps = gcc

rule cxx
  command = $cxx -MMD -MT $out -MF $out.d $cxxflags $cxxflags_ -c $in -o $out
  description = CXX $out
  depfile = $out.d
  deps = gcc

rule res
  command = $res -o $out $in
  description = RES $out

rule ar
  command = $ar crs $out $in
  description = AR $out

rule cc_link
  command = $cc $ldflags $ldflags_ -o $out $in $libs
  description = LINK $out

rule cc_dlink
  command = $cc -shared $ldflags $ldflags_ -o $out $in $libs
  description = DLINK $out

rule cxx_link
  command = $cxx $ldflags $ldflags_ -o $out $in $libs
  description = LINK $out

rule cxx_dlink
  command = $cxx -shared $ldflags $ldflags_ -o $out $in $libs
  description = DLINK $out

rule embed
  command = $lua $in
  description = EMBED $out

### Sub ninja files

subninja deps/auxiliar/auxiliar.ninja
subninja deps/lpack/lpack.ninja
subninja deps/lpeg/lpeg.ninja
subninja deps/lirrxml/lirrxml.ninja

### Build define

build src/scripts.cc: embed src/lua/embed.lua | src/lua/_manifest.lua $
  src/lua/common.lua src/lua/hook.lua src/lua/plugin.lua src/lua/script.lua $
  src/lua/_eelua_main.lua
build $builddir/eelua_plugin.o: cc src/eelua_plugin.cc
build $builddir/eelua.o: cxx src/eelua.cc
build $builddir/menu.o: cxx src/menu.cc
build $builddir/editor.o: cxx src/editor.cc
build $builddir/document.o: cxx src/document.cc
build $builddir/util.o: cxx src/util.cc
build $builddir/UnicodeUtils.o: cxx src/UnicodeUtils.cc
build $builddir/lextralib.o: cxx src/lextralib.cc
build $builddir/scripts.o: cxx src/scripts.cc

build eelua.dll: cxx_dlink $builddir/eelua_plugin.o $
  $builddir/eelua.o $builddir/editor.o $builddir/document.o $
  $builddir/menu.o $
  $builddir/util.o $builddir/UnicodeUtils.o $builddir/lextralib.o $
  $builddir/scripts.o | $builddir/libauxiliar.a
  libs = -lauxiliar -llua

build eelua: phony eelua.dll
build all: phony eelua lpack lpeg lirrxml
default all

